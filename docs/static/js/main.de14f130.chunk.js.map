{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","propietario","sintomas","mascota","fecha","hora","cita","actualizarCita","error","actualizarError","actualizarState","event","target","name","value","className","onSubmit","preventDefault","Object","values","every","property","id","uuidv4","type","placeholder","onChange","protoTypes","PropTypes","func","isRequired","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de14f130.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({ crearCita }) => {\r\n\r\n    // State de cita\r\n    const [ cita, actualizarCita ] = useState({\r\n        propietario : '',\r\n        sintomas    : '',\r\n        mascota     : '',\r\n        fecha       : '',\r\n        hora        : ''\r\n    });\r\n\r\n    // State de error\r\n    const [ error, actualizarError ] = useState(false);\r\n\r\n    const { propietario, sintomas, mascota, fecha, hora } = cita;\r\n\r\n    // Leyendo datos del campo\r\n    const actualizarState = event => actualizarCita({\r\n        ...cita,\r\n        [event.target.name]: event.target.value\r\n    });\r\n    \r\n    const submitCita = event => {\r\n        event.preventDefault();\r\n\r\n        // Validando Cita\r\n        if( !Object.values( cita ).every( property => property !== '' ) ) {\r\n            actualizarError( true );\r\n            return;\r\n        }\r\n\r\n        actualizarError( false );\r\n\r\n        // Generando un id a la cita\r\n        cita.id = uuidv4();\r\n\r\n        // Agregando la cita al listado de citas\r\n        crearCita( cita );\r\n\r\n        // Reiniciar Formulario\r\n        actualizarCita({\r\n            propietario : '',\r\n            sintomas    : '',\r\n            mascota     : '',\r\n            fecha       : '',\r\n            hora        : ''\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Crear Cita</h2>\r\n\r\n            { error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null }\r\n\r\n            <form\r\n                onSubmit={ submitCita }\r\n            >\r\n                <label>Nombre Mascota</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre Mascota\"\r\n                    value={ mascota }\r\n                    onChange={ actualizarState }\r\n                />\r\n\r\n                <label>Nombre Dueño</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"propietario\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre Dueño de la Mascota\"\r\n                    value={ propietario }\r\n                    onChange={ actualizarState }\r\n                />\r\n\r\n                <label>Fecha</label>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    value={ fecha }\r\n                    onChange={ actualizarState }\r\n                />\r\n\r\n                <label>Hora</label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    value={ hora }\r\n                    onChange={ actualizarState }\r\n                />\r\n\r\n                <label>Síntomas</label>\r\n                <textarea\r\n                    name=\"sintomas\"\r\n                    className=\"u-full-width\"\r\n                    value={ sintomas }\r\n                    onChange={ actualizarState }\r\n                ></textarea>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                >Agregar Cita</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nFormulario.protoTypes = {\r\n    crearCita: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cita = ({ cita:{ mascota, propietario, fecha, hora, sintomas, id }, eliminarCita }) => ( \r\n    <div className=\"cita\">\r\n        <p>Mascota: <span>{ mascota }</span></p>\r\n        <p>Dueño: <span>{ propietario }</span></p>\r\n        <p>Fecha: <span>{ fecha }</span></p>\r\n        <p>Hora: <span>{ hora }</span></p>\r\n        <p>Sintomas: <span>{ sintomas }</span></p>\r\n        <button  \r\n            className=\"button eliminar u-full-width\"\r\n            onClick={ () => eliminarCita( id ) }\r\n        >Eliminar &times;</button>\r\n    </div>\r\n);\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Cita;","import React, { useEffect, useState } from 'react';\nimport Formulario from './components/Formulario';\nimport Cita from './components/Cita';\n\nfunction App() {\n\n\t// Obteniendo Citas del localStorage\n\tconst citasIniciales = JSON.parse( localStorage.getItem( 'citas' ) ) || [];\n\t\n\t// State de Citas\n\tconst [ citas, guardarCitas ] = useState( citasIniciales );\n\t\n\t// State de citas, escucha a los cambios del arreglo de citas\n\tuseEffect( () => {\n\t\tconst citasIniciales = JSON.parse( localStorage.getItem( 'citas' ) ) || [];\n\n\t\tlocalStorage.setItem( 'citas', JSON.stringify(  ( citasIniciales ) ? citas : [] ) );\n\t}, [ citas ] );\n\n\t// Agrega una nueva cita al state de citas\n\tconst crearCita = cita => guardarCitas([\n\t\t...citas,\n\t\tcita\n\t]);\t\n\n\t// Elimina una cita por su id\n\tconst eliminarCita = id => {\n\t\tconst nuevasCitas = citas.filter( cita => cita.id !== id );\n\t\tguardarCitas( nuevasCitas );\n\t}\n\n\t// Mensaje condicional\n\tconst titulo = ( citas.length === 0 ) ? 'No hay citas' : 'Administra tus citas';\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Administrador de Pacientes</h1>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<Formulario\n\t\t\t\t\t\t\tcrearCita={ crearCita }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<h2>{ titulo }</h2>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcitas.map( cita => (\n\t\t\t\t\t\t\t\t<Cita\n\t\t\t\t\t\t\t\t\tkey={ cita.id }\n\t\t\t\t\t\t\t\t\tcita={ cita }\n\t\t\t\t\t\t\t\t\teliminarCita={ eliminarCita }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}